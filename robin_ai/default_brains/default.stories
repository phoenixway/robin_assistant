    story greet {
        < <intent>greetings
        > Hey! Whats up?
        <if in>
            all right => {
                > Cool!
                > Great to hear that.
            }
            <intent>no => {
                > Oh...
            }
        </if>
        < fuck
    }
    story quit {
        < <intent>bye
        <fn>
            import sys
            sys.exit(0)
        </fn>
    }    
    story {
        < <intent>cursing
        > Dont curse
    }
   
    story alarm{
        < alarm in %d m
        <fn>
            from datetime import datetime, timedelta
            interval = vars.unnamed_vars[0].value
            dt = datetime.now() + timedelta(minutes=int(interval))
            def func(ms, interval):
                ms.say("Ring ring in " + str(interval) + " minutes!")
                import os
                duration = 1  # seconds
                freq = 440  # Hz
                os.system('play -nq -t alsa synth {} sine {}'.format(duration, freq))
            scheduler.add_job(func, 'date', run_date=dt, args=[ms, int(interval)])
            # scheduler.start()
            ret="Alarm will work in " + str(interval) + " minutes!"
        </fn>
        < thanx
        > U welcome, milord.
    }
    story {
        < time
        <fn>
            from datetime import datetime
            ret = str(datetime.now())
        </fn> 
    }
    story {
        < anime time!
        <fn>
            import webbrowser
            webbrowser.open_new_tab('https://jut.su')
            ret = "Enjoy, sir."
        </fn> 
    }

    story {
        < next wp
        <fn>
            import subprocess
            try:
                result = subprocess.run(['variety', '--next'], stdout=subprocess.PIPE)
                ret = "As u command"
            except subprocess.CalledProcessError:
                ret = "Can't, sorry."
        </fn>
    }
    story {
        < del wp
        <fn>
            import subprocess
            try:
                result = subprocess.run(['variety', '-t'], stdout=subprocess.PIPE)
                ret = "As u command"
            except subprocess.CalledProcessError:
                ret = "Can't, sorry."
        </fn>
    }
    story {
        < fav wp
        <fn>
            import subprocess
            try:
                result = subprocess.run(['variety', '-f'], stdout=subprocess.PIPE)
                ret = "As u command"
            except subprocess.CalledProcessError:
                ret = "Can't, sorry."
        </fn>
    }

    story {
        < inspire me
        <fn>
            import subprocess
            try:
                result = subprocess.run(['motivate'], stdout=subprocess.PIPE)
                ret = result.stdout.decode('utf-8').strip()
            except subprocess.CalledProcessError:
                ret = "Can't, sorry."
        </fn>
    }
    story force_own_will {
        < system_command force_own_will
        <fn>
            ai.force_own_will_story()
            ret = "System command executed, boss!"
        </fn>
    }
    story {
        < <intent>thanku
        <fn>
            # local a = {'u welcome', 'im here to serve'}
            # return a[ math.random( #a ) ]  
            db['test']='u welcome'          
            ret=db['test']
        </fn>
    }
    story {
        < <intent>about
        > I`m your battle machine - Robin.
    }
    story {
        < open tasks
        <fn>
            os.execute('gedit &')
        </fn>
    }

    story {
        < <intent>stop_phase
        > Ok, boss.
    }
